name: Build Python App with Nuitka

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          # Your entry-point script:
          script-name: qt-client.py

          # Which Nuitka release to use:
          nuitka-version: main

          # Build mode: 'app', 'standalone', or leave unset for default
          mode: standalone

          enable-plugins: pyside6

          #output-file: quackmessage

          # Example built-in flags:
          #onefile: true          # bundle into a single executable
          #remove-output: true    # clean previous build folders before building

          # Pass ANY other CLI flags here (one per line):
          #arguments: |
          #  --enable-plugin=pyside6
          #  --product-name=Quackmessage
          #  --output-filename=quackmessage
          #  --lto                # enable link-time optimization
          #  --python-flag=-O3    # run under optimized bytecode
          #  --enable-plugin=tk-inter  # if you use tkinter GUI

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }} Build
          path: |
            build/**/*.exe
            build/**/*.bin
            build/**/*.run
          if-no-files-found: ignore
          include-hidden-files: true
